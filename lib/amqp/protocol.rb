# encoding: utf-8

# THIS IS AN AUTOGENERATED FILE, DO NOT MODIFY
# IT DIRECTLY ! FOR CHANGES, PLEASE UPDATE CODEGEN.PY
# IN THE ROOT DIRECTORY OF THE AMQP-PARSER REPOSITORY.

module AMQP
  module Protocol
    PROTOCOL_VERSION = "0.9.1"
    DEFAULT_PORT = 5672

    # @version 0.0.1
    # @return [Array] Collection of subclasses of AMQP::Protocol::Class.
    def self.classes
      Class.classes
    end

    class Frame
    end

    class Class
      @@classes = Array.new

      def self.inherited(base)
        @@classes << self
      end

      def self.classes
        @@classes
      end

      def self.name
        @@name
      end

      def self.method
        @@method
      end
    end

    
    module Connection
      
      class Start < Class
        @@name = "connection.start"
        @@method = 10
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class StartOk < Class
        @@name = "connection.start-ok"
        @@method = 11
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class Secure < Class
        @@name = "connection.secure"
        @@method = 20
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class SecureOk < Class
        @@name = "connection.secure-ok"
        @@method = 21
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class Tune < Class
        @@name = "connection.tune"
        @@method = 30
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class TuneOk < Class
        @@name = "connection.tune-ok"
        @@method = 31
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class Open < Class
        @@name = "connection.open"
        @@method = 40
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class OpenOk < Class
        @@name = "connection.open-ok"
        @@method = 41
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class Close < Class
        @@name = "connection.close"
        @@method = 50
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class CloseOk < Class
        @@name = "connection.close-ok"
        @@method = 51
        
        # @return
        def self.decode(data)
        end
        
      end
      
    end
    
    module Channel
      
      class Open < Class
        @@name = "channel.open"
        @@method = 10
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class OpenOk < Class
        @@name = "channel.open-ok"
        @@method = 11
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class Flow < Class
        @@name = "channel.flow"
        @@method = 20
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class FlowOk < Class
        @@name = "channel.flow-ok"
        @@method = 21
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class Close < Class
        @@name = "channel.close"
        @@method = 40
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class CloseOk < Class
        @@name = "channel.close-ok"
        @@method = 41
        
        # @return
        def self.decode(data)
        end
        
      end
      
    end
    
    module Exchange
      
      class Declare < Class
        @@name = "exchange.declare"
        @@method = 10
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class DeclareOk < Class
        @@name = "exchange.declare-ok"
        @@method = 11
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class Delete < Class
        @@name = "exchange.delete"
        @@method = 20
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class DeleteOk < Class
        @@name = "exchange.delete-ok"
        @@method = 21
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class Bind < Class
        @@name = "exchange.bind"
        @@method = 30
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class BindOk < Class
        @@name = "exchange.bind-ok"
        @@method = 31
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class Unbind < Class
        @@name = "exchange.unbind"
        @@method = 40
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class UnbindOk < Class
        @@name = "exchange.unbind-ok"
        @@method = 51
        
        # @return
        def self.decode(data)
        end
        
      end
      
    end
    
    module Queue
      
      class Declare < Class
        @@name = "queue.declare"
        @@method = 10
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class DeclareOk < Class
        @@name = "queue.declare-ok"
        @@method = 11
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class Bind < Class
        @@name = "queue.bind"
        @@method = 20
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class BindOk < Class
        @@name = "queue.bind-ok"
        @@method = 21
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class Purge < Class
        @@name = "queue.purge"
        @@method = 30
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class PurgeOk < Class
        @@name = "queue.purge-ok"
        @@method = 31
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class Delete < Class
        @@name = "queue.delete"
        @@method = 40
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class DeleteOk < Class
        @@name = "queue.delete-ok"
        @@method = 41
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class Unbind < Class
        @@name = "queue.unbind"
        @@method = 50
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class UnbindOk < Class
        @@name = "queue.unbind-ok"
        @@method = 51
        
        # @return
        def self.decode(data)
        end
        
      end
      
    end
    
    module Basic
      
      class Qos < Class
        @@name = "basic.qos"
        @@method = 10
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class QosOk < Class
        @@name = "basic.qos-ok"
        @@method = 11
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class Consume < Class
        @@name = "basic.consume"
        @@method = 20
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class ConsumeOk < Class
        @@name = "basic.consume-ok"
        @@method = 21
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class Cancel < Class
        @@name = "basic.cancel"
        @@method = 30
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class CancelOk < Class
        @@name = "basic.cancel-ok"
        @@method = 31
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class Publish < Class
        @@name = "basic.publish"
        @@method = 40
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class Return < Class
        @@name = "basic.return"
        @@method = 50
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class Deliver < Class
        @@name = "basic.deliver"
        @@method = 60
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class Get < Class
        @@name = "basic.get"
        @@method = 70
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class GetOk < Class
        @@name = "basic.get-ok"
        @@method = 71
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class GetEmpty < Class
        @@name = "basic.get-empty"
        @@method = 72
        
        # @return
        def self.decode(data)
        end
        
      end
      
      class Ack < Class
        @@name = "basic.ack"
        @@method = 80
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class Reject < Class
        @@name = "basic.reject"
        @@method = 90
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class RecoverAsync < Class
        @@name = "basic.recover-async"
        @@method = 100
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class Recover < Class
        @@name = "basic.recover"
        @@method = 110
        
        # @return
        def self.encode(*args)
        end
        
      end
      
      class RecoverOk < Class
        @@name = "basic.recover-ok"
        @@method = 111
        
        # @return
        def self.decode(data)
        end
        
      end
      
    end
    
  end
end
